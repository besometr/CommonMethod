////////////////////////////////////////////////////////////////////////////////
// Подсистема "Общие методы объектов".
//
// Модуль повторного использования.
// Содержит методы поиска и работы с объектами метаданных,
// применительно к подсистеме "Общие методы объектов".
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//Общие процедуры и функции
#Область ПрограммныйИнтерфейс

// МетаданныеПоПолномуИмени
// Повторного использования. Осуществляет поиск объекта по полному имени метаданных.
//
// Параметры:
//	ПолноеИмяОбъектаМетаданных	- Строка	- Имя объекта метаданных для получения Объекта метаданных.
//	ТекстОшибки					- Строка	- Содержит описание ошибки, в случае возникновения оной.
//	Отказ						- Булево	- Признак возникновения ошибки выполнения.
//
// Возвращаемое значение:
//	ОбъектМетаданных	- Если по имени метаданных удалось найти объект.
//	Неопределено		- В других случаях.
//
Функция МетаданныеПоПолномуИмени(ПолноеИмяОбъектаМетаданных, ТекстОшибки = "", Отказ = Ложь) Экспорт
	
	//Поиск объекта метаданных
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъектаМетаданных);
	
	Возврат ОбъектМетаданных;
	
КонецФункции

// ОбрабатываемыеМетаданныеПоПолномуИмени
// Повторного использования. Проверяет найденный тип метаданных на вхождение в список поддерживаемых 
// подсистемой "Общие методы объектов".
//
// Параметры:
//	ПолноеИмяОбъектаМетаданных	- Строка	- Имя объекта метаданных для проверки использования Общих методов.
//	ТекстОшибки					- Строка	- Содержит описание ошибки, в случае возникновения оной.
//	Отказ						- Булево	- Признак возникновения ошибки выполнения.
//
// Возвращаемое значение:
//	Структура		- Набор необходимых для работы механизмов Общих методов свойств Объекта метаданных,
//					в случае, если тип объекта метаданных поддерживается подсистемой.
//		* ОбъектМетаданных	- ОбъектМетаданных	- Найденный по полному наименованию объект метаданных поддерживаемого типа.
//		* ПолноеИмя			- Строка 			- Полное наименование объекта метаданных.
//		* Тип				- Строка			- Текстовое представление типа метаданных (Документ, Справочник и т.д.).
//		* Имя				- Строка			- Текстовое представление объекта метаданных (споГруз, Контрагенты и т.д.).
//	Неопределено	- В других случаях.
//
Функция ОбрабатываемыеМетаданныеПоПолномуИмени(ПолноеИмяОбъектаМетаданных, ТекстОшибки = "", Отказ = Ложь)Экспорт 

	ОбъектМетаданных = ОбщиеМетодыОбъектовПовтИсп.МетаданныеПоПолномуИмени(ПолноеИмяОбъектаМетаданных, ТекстОшибки, Отказ);
	
	Если ОбъектМетаданных = Неопределено Тогда 
		ТекстОшибки = "Не удалось найти Объект метаданных по полному имени """ + ПолноеИмяОбъектаМетаданных + """" ;
		Отказ = Истина;
		Возврат Неопределено;	
	КонецЕсли;
	
	ОбеъектМетаданныхПоддерживаетОбщиеМетоды = Ложь;
	СтруктураОбъектаМетаданных = Новый Структура("ОбъектМетаданных, ПолноеИмя, Тип, Имя");
	
	//Определение типа объекта метаданных
	СоответствиеОбрабатываемыхТиповМетаданных = Новый Соответствие();
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("Документы",					"Документ");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("Справочники",				"Справочник");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("ПланыВидовХарактеристик",	"ПланВидовХарактеристик");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("Задачи", 					"Задача");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("ПланыОбмена", 				"ПланОбмена");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("БизнесПроцессы",			"БизнесПроцесс");
	СоответствиеОбрабатываемыхТиповМетаданных.Вставить("ПланыВидовРасчета",			"ПланВидовРасчета");

	Для Каждого КлючИЗначениеТипаМетаданных Из СоответствиеОбрабатываемыхТиповМетаданных Цикл
		Если Метаданные[КлючИЗначениеТипаМетаданных.Ключ].Содержит(ОбъектМетаданных) Тогда
			
			СтруктураОбъектаМетаданных.ОбъектМетаданных	= ОбъектМетаданных;
			СтруктураОбъектаМетаданных.ПолноеИмя		= ПолноеИмяОбъектаМетаданных;
			СтруктураОбъектаМетаданных.Тип				= КлючИЗначениеТипаМетаданных.Значение;
			СтруктураОбъектаМетаданных.Имя				= ОбъектМетаданных.Имя;
			
			ОбеъектМетаданныхПоддерживаетОбщиеМетоды = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ОбеъектМетаданныхПоддерживаетОбщиеМетоды Тогда 
		Возврат Новый ФиксированнаяСтруктура(СтруктураОбъектаМетаданных);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// МодульМенеджераОбрабатываемыхОбъектовМетаданных
// Повторного использования. Создает и возвращает Менеджер объекта для дальнейших вызывов методов объектов.
//
// Параметры:
//	ПолноеИмяОбъектаМетаданных	- Строка	- Имя объекта метаданных для получения Менеджера объекта.
//	ТекстОшибки					- Строка	- Содержит описание ошибки, в случае возникновения оной.
//	Отказ						- Булево	- Признак возникновения ошибки выполнения.
//
// Возвращаемое значение:
//	МенеджерОбъекта	- Ссылка на менеджер объекта.
//	Неопределено	- Если тип объекта метаданных не найден или не поддерживается подсистемой Общие методы объектов.
//
Функция МодульМенеджераОбрабатываемыхОбъектовМетаданных(ПолноеИмяОбъектаМетаданных, ТекстОшибки = "", Отказ = Ложь)Экспорт 
	
	СтруктураОбъектаМетаданных = ОбщиеМетодыОбъектовПовтИсп.ОбрабатываемыеМетаданныеПоПолномуИмени(ПолноеИмяОбъектаМетаданных, ТекстОшибки, Отказ);
	
	Если СтруктураОбъектаМетаданных = Неопределено Тогда 
		ТекстОшибки = "Не удалось найти Объект метаданных по полному имени """ + ПолноеИмяОбъектаМетаданных + """
						|или данный тип метаданных не поддерживает общие конструкторы!";
		Отказ = Истина;
		Возврат Неопределено;	
	КонецЕсли;	
	
	//Создание пустой ссылки и менеджера объекта
	ПустаяСсылка	= Неопределено;
	МенеджерОбъекта	= Неопределено;
	
	Попытка
		ПустаяСсылка	= Новый (СтруктураОбъектаМетаданных.Тип + "Ссылка." + СтруктураОбъектаМетаданных.Имя);
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ПустаяСсылка);
	Исключение
		ТекстОшибки = "Не удалось создать Менеджер объекта """ + СтруктураОбъектаМетаданных.ПолноеИмя + """ 
						|по причине: " + ОписаниеОшибки();
		Отказ = Истина;
	КонецПопытки;
		
	Возврат МенеджерОбъекта;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
